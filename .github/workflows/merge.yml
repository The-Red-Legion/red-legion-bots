name: Merge Pull Request

on:
  pull_request:
    branches: [main]
    types: [labeled]

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read
  checks: read

jobs:
  merge-pr:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'merge') && contains(github.event.pull_request.labels.*.name, 'ready to merge')
    steps:
      - name: Merge Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              // Get PR details for merge
              const pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number
              });
              
              // Add pre-merge comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: 'üöÄ **Merging Pull Request**\\n\\nAll checks passed and deployment was successful. Merging now...'
              });
              
              // Merge the pull request
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                commit_title: `Deploy: ${pr.data.title}`,
                commit_message: `Deployment successful for PR #${context.payload.pull_request.number}\\n\\n${pr.data.body || 'No description provided'}`,
                merge_method: 'squash'
              });
              
              console.log('‚úÖ Pull request merged successfully');
              
              // Add final success comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: '‚úÖ **Merge Successful**\\n\\nPull request has been successfully merged to main branch. The deployment is now live in production.'
              });
              
            } catch (error) {
              console.error('‚ùå Failed to merge pull request:', error.message);
              throw error;
            }
            
  post-merge:
    if: always()
    needs: merge-pr
    runs-on: ubuntu-latest
    steps:
      - name: Handle Merge Failure
        if: needs.merge-pr.result == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              // Remove workflow labels
              const labelsToRemove = ['tests good', 'deploy', 'ready to merge', 'merge'];
              for (const label of labelsToRemove) {
                try {
                  await github.rest.issues.removeLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.payload.pull_request.number,
                    name: label
                  });
                  console.log(`${label} label removed successfully`);
                } catch (error) {
                  if (error.status === 404) {
                    console.log(`${label} label not found, nothing to remove`);
                  } else {
                    console.error(`Failed to remove ${label} label:`, error.message);
                  }
                }
              }
              
              // Add bug label
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ['bug']
              });
              console.log('Bug label added successfully');
              
              // Add failure comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: '‚ùå **Merge Failed**\\n\\nThere was an error merging the pull request. This could be due to:\\n- Merge conflicts\\n- Branch protection rules\\n- Insufficient permissions\\n\\nPlease check the error logs above and resolve any issues before attempting to merge again.'
              });
              
            } catch (error) {
              console.error('Failed to handle merge failure:', error.message);
            }
