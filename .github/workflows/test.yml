name: Test
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  test-bots:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest pytest-mock psycopg2-binary
      - name: Run Unit Tests
        run: |
          python -m pytest tests/ -p no:cacheprovider
        env:
          PYTHONPATH: ${{ github.workspace }}/src
          GOOGLE_CLOUD_PROJECT: rl-prod-471116
          TEXT_CHANNEL_ID: "1187497620525023262"
          DISCORD_TOKEN: "dummy-token"
          DATABASE_URL: "postgresql://test:test@localhost:5432/testdb"
          GITHUB_TOKEN: "dummy-github-token"  # Mock for tests
    outputs:
      result: success

  test-connections:
    needs: test-bots
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt psycopg2-binary google-cloud-secret-manager
      - name: Test Connections
        id: test
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "DEBUG: DATABASE_URL set to [${DATABASE_URL}]" >> $GITHUB_STEP_SUMMARY
          python -c "import psycopg2; conn = psycopg2.connect(os.getenv('DATABASE_URL')); conn.close();" || { echo "result=fail" >> $GITHUB_OUTPUT; echo "Database failed"; exit 1; }
          echo "Database successful"
          python -c "from google.cloud import secretmanager; client = secretmanager.SecretManagerServiceClient(); client.access_secret_version(name='projects/rl-prod-471116/secrets/discord-token/versions/latest');" || { echo "result=fail" >> $GITHUB_OUTPUT; echo "Secret failed"; exit 1; }
          echo "Secret successful"
          echo "result=success" >> $GITHUB_OUTPUT
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          GOOGLE_CLOUD_PROJECT: rl-prod-471116
    outputs:
      result: ${{ steps.test.outputs.result }}