name: Test
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  test-bots:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest pytest-mock psycopg2-binary
      - name: Run Unit Tests
        run: |
          python -m pytest tests/ -p no:cacheprovider
        env:
          PYTHONPATH: ${{ github.workspace }}/src  # Add src to Python path
    outputs:
      result: success  # Assume success unless test fails (handled by exit code)

  test-connections:
    needs: test-bots
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt psycopg2-binary discord.py google-cloud-secret-manager
      - name: Test Connections
        id: test
        run: |
          # Set up environment variables
          echo "DISCORD_TOKEN=$(gcloud secrets versions access latest --secret=discord-token)" >> $GITHUB_ENV
          echo "TEXT_CHANNEL_ID=$(gcloud secrets versions access latest --secret=text-channel-id)" >> $GITHUB_ENV
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

          # Test Discord connection (using a proper async script)
          cat << 'EOF' > test_discord.py
          import discord
          import asyncio
          import os

          async def test_connection():
              intents = discord.Intents.default()
              client = discord.Client(intents=intents)
              await client.login(os.getenv('DISCORD_TOKEN'))
              try:
                  await client.fetch_user(client.user.id)
              finally:
                  await client.close()

          asyncio.run(test_connection())
          EOF
          python test_discord.py || { echo "result=fail" >> $GITHUB_OUTPUT; echo "Discord connection failed"; exit 1; }
          echo "Discord connection successful"

          # Test Database connection
          python -c "import psycopg2; conn = psycopg2.connect(os.getenv('DATABASE_URL')); conn.close();" || { echo "result=fail" >> $GITHUB_OUTPUT; echo "Database connection failed"; exit 1; }
          echo "Database connection successful"

          # Test Secret Manager
          python -c "from google.cloud import secretmanager; client = secretmanager.SecretManagerServiceClient(); client.access_secret_version(name='projects/$(gcloud config get-value project)/secrets/discord-token/versions/latest');" || { echo "result=fail" >> $GITHUB_OUTPUT; echo "Secret Manager access failed"; exit 1; }
          echo "Secret Manager access successful"

          echo "result=success" >> $GITHUB_OUTPUT
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
    outputs:
      result: ${{ steps.test.outputs.result }}