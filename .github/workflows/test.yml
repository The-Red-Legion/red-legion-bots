name: Test
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  test-bots:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          check-latest: false
      - name: Install dependencies
        run: |
          /home/jt/actions-runner/_work/_tool/Python/3.9.23/x64/bin/python3 -m pip install --upgrade pip
          /home/jt/actions-runner/_work/_tool/Python/3.9.23/x64/bin/pip3 install -r requirements.txt ruff pytest pytest-mock psycopg2-binary
      - name: Run linting
        run: /home/jt/actions-runner/_work/_tool/Python/3.9.23/x64/bin/python3 -m ruff check src/*.py --line-length 120
      - name: Run unit tests
        env:
          PYTHONPATH: .
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          TEXT_CHANNEL_ID: ${{ secrets.TEXT_CHANNEL_ID }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: /home/jt/actions-runner/_work/_tool/Python/3.9.23/x64/bin/python3 -m pytest tests/

  test-connections:
    needs: test-bots
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          check-latest: false
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Install Dependencies
        run: |
          /home/jt/actions-runner/_work/_tool/Python/3.9.23/x64/bin/python3 -m pip install --upgrade pip
          /home/jt/actions-runner/_work/_tool/Python/3.9.23/x64/bin/pip3 install -r requirements.txt psycopg2-binary google-cloud-secret-manager
      - name: Test Connections
        id: test
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "DEBUG: DATABASE_URL set to [${DATABASE_URL}]" >> $GITHUB_STEP_SUMMARY
          /home/jt/actions-runner/_work/_tool/Python/3.9.23/x64/bin/python3 -c "import os; import psycopg2; conn = psycopg2.connect(os.getenv('DATABASE_URL').replace('%', '%25'), connect_timeout=10, sslmode='require'); conn.close();" || { echo "result=fail" >> $GITHUB_OUTPUT; echo "Database failed: ${conn.error}"; exit 1; }
          echo "Database successful"
          /home/jt/actions-runner/_work/_tool/Python/3.9.23/x64/bin/python3 -c "from google.cloud import secretmanager; client = secretmanager.SecretManagerServiceClient(); client.access_secret_version(name='projects/rl-prod-471116/secrets/discord-token/versions/latest');" || { echo "result=fail" >> $GITHUB_OUTPUT; echo "Secret failed"; exit 1; }
          echo "Secret successful"
          echo "result=success" >> $GITHUB_OUTPUT
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          GOOGLE_CLOUD_PROJECT: rl-prod-471116
    outputs:
      result: ${{ steps.test.outputs.result }}

  post-test:
    if: always()  # Run regardless of test job success/failure
    needs: [test-bots, test-connections]
    runs-on: ubuntu-latest
    steps:
      - name: Add Ready to Deploy Label on Success
        if: needs.test-bots.result == 'success' && needs.test-connections.result == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // Add Ready to Deploy label
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ['Ready to Deploy']
              });
              console.log('Ready to Deploy label added successfully');
              
              // Remove bug label if it exists
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  name: 'bug'
                });
                console.log('Bug label removed successfully');
              } catch (error) {
                if (error.status === 404) {
                  console.log('Bug label not found, nothing to remove');
                } else {
                  console.error('Failed to remove bug label:', error.message);
                }
              }
            } catch (error) {
              console.error('Failed to add Ready to Deploy label:', error.message);
              throw error;
            }
      
      - name: Add Bug Label on Failure
        if: needs.test-bots.result == 'failure' || needs.test-connections.result == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // Add bug label
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ['bug']
              });
              console.log('Bug label added successfully');
              
              // Remove Ready to Deploy label if it exists
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  name: 'Ready to Deploy'
                });
                console.log('Ready to Deploy label removed successfully');
              } catch (error) {
                if (error.status === 404) {
                  console.log('Ready to Deploy label not found, nothing to remove');
                } else {
                  console.error('Failed to remove Ready to Deploy label:', error.message);
                }
              }
            } catch (error) {
              console.error('Failed to add bug label:', error.message);
              // Don't throw error here to avoid failing the workflow
              // since this is just cleanup
            }