---
- name: Check systemd service status
  systemd:
    name: red-legion-bot
  register: service_status
  when: not ansible_check_mode

- name: Verify bot service is running
  assert:
    that:
      - service_status.status.ActiveState == "active"
      - service_status.status.SubState == "running"
    fail_msg: "Bot service is not running. State: {{ service_status.status.ActiveState }}/{{ service_status.status.SubState }}"
    success_msg: "✅ Bot service is active and running"
  when: not ansible_check_mode

- name: Get recent bot logs from systemd
  shell: journalctl -u red-legion-bot -n 20 --no-pager
  register: service_logs
  when: not ansible_check_mode

- name: Display recent service logs
  debug:
    msg: "{{ service_logs.stdout }}"
  when: not ansible_check_mode and service_logs is defined

- name: Check for error patterns in logs
  shell: journalctl -u red-legion-bot -n 50 --no-pager | grep -i "ERROR\|Exception\|Failed\|Traceback" || true
  register: error_check
  when: not ansible_check_mode

- name: Display error check results
  debug:
    msg: |
      {% if error_check.stdout %}
      ⚠️ Found potential errors in logs:
      {{ error_check.stdout }}
      {% else %}
      ✅ No obvious errors found in recent logs
      {% endif %}
  when: not ansible_check_mode and error_check is defined

- name: Get bot main process PID
  shell: systemctl show red-legion-bot --property MainPID --value
  register: main_pid
  when: not ansible_check_mode

- name: Report successful deployment
  debug:
    msg: |
      ✅ BOT DEPLOYMENT SUCCESSFUL ✅
      Service Status: {{ service_status.status.ActiveState }}/{{ service_status.status.SubState }}
      Main PID: {{ main_pid.stdout }}
      Uptime: {{ service_status.status.ActiveEnterTimestamp }}
      Memory Usage: {{ service_status.status.MemoryCurrent | default('Unknown') }}
      ========================================
  when: not ansible_check_mode and service_status.status.ActiveState == "active"
