---
- name: Test Python imports before starting bot
  command: python3 -c "import src.participation_bot; print('Import successful')"
  args:
    chdir: "{{ app_dir }}"
  environment:
    PYTHONPATH: "{{ app_dir }}:$PYTHONPATH"
  register: import_test
  when: not ansible_check_mode
  ignore_errors: true

- name: Show import test result
  debug:
    msg: "Import test result: {{ import_test.stdout if import_test.rc == 0 else import_test.stderr }}"
  when: not ansible_check_mode and import_test is defined

- name: Create systemd service file
  copy:
    content: |
      [Unit]
      Description=Red Legion Discord Bot
      After=network.target
      Wants=network-online.target
      After=network-online.target

      [Service]
      Type=simple
      User=root
      WorkingDirectory={{ app_dir }}
      ExecStart=/usr/bin/python3 -m src.participation_bot
      Restart=always
      RestartSec=10
      StandardOutput=journal
      StandardError=journal
      Environment=PYTHONUNBUFFERED=1

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/red-legion-bot.service
    mode: '0644'
  notify: reload systemd

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Enable and start systemd service
  systemd:
    name: red-legion-bot
    enabled: yes
    state: started
  args:
    executable: /bin/bash
  register: start_result
  when: not ansible_check_mode and (import_test is undefined or import_test.rc == 0)

- name: Show startup debug info
  debug:
    msg: "{{ start_result.stdout_lines }}"
  when: not ansible_check_mode and start_result is defined

- name: Wait for bot to start
  pause:
    seconds: 3
  when: not ansible_check_mode

- name: Verify bot process is running
  shell: |
    #!/bin/bash
    if [ -f "{{ app_dir }}/bot.pid" ]; then
      kill -0 $(cat {{ app_dir }}/bot.pid) 2>/dev/null
    else
      exit 1
    fi
  args:
    executable: /bin/bash
  register: bot_check
  failed_when: bot_check.rc != 0
  ignore_errors: true
  when: not ansible_check_mode

- name: Show bot log if startup failed
  shell: |
    #!/bin/bash
    if [ -f "{{ app_dir }}/bot.log" ]; then
      cat {{ app_dir }}/bot.log
    else
      echo "No bot log file found"
    fi
  args:
    executable: /bin/bash
  when: (bot_check is defined and (bot_check.rc | default(0)) != 0 and not ansible_check_mode) or (ansible_check_mode and false)
  register: bot_log
  failed_when: false

- name: Fail with bot log
  fail:
    msg: "Bot failed to start. Log output: {{ bot_log.stdout }}"
  when: (bot_check is defined and (bot_check.rc | default(0)) != 0 and not ansible_check_mode) or (ansible_check_mode and false)
